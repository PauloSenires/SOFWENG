/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adminui;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.Driver;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.NumberFormat;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.NumberFormatter;

/**
 *
 * @author Elijah
 */
public class AdminEditUserForm extends javax.swing.JFrame {

    private AdminMainMenu mm = new AdminMainMenu();
    /**
     * Creates new form AdminEditUserForm
     */
    public AdminEditUserForm() throws SQLException {
        this.setSize(900, 700);
        this.setResizable(false);
        Dimension size = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation((size.width - this.getSize().width) / 2, (size.height - this.getSize().height) / 2);
        JDBC();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() throws SQLException {

        NumberFormat format = NumberFormat.getInstance();
        NumberFormatter formatter = new NumberFormatter(format);
        formatter.setValueClass(Integer.class);
        formatter.setMinimum(0);
        formatter.setMaximum(Integer.MAX_VALUE);
        formatter.setAllowsInvalid(false);
        // If you want the value to be committed on each keystroke instead of focus lost
        formatter.setCommitsOnValidEdit(true);
        MainPanel = new javax.swing.JPanel();
        DisplayNamePanel = new javax.swing.JPanel();
        DisplayNameLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        MidPanel = new javax.swing.JPanel();
        EmailPanel = new javax.swing.JPanel();
        EmailLabel = new javax.swing.JLabel();
        EmailField = new javax.swing.JTextField();
        ContactPanel = new javax.swing.JPanel();
        ContactLabel = new javax.swing.JLabel();
        ContactField = new javax.swing.JTextField();
        GenderPanel = new javax.swing.JPanel();
        GenderLabel = new javax.swing.JLabel();
        GenderField = new javax.swing.JTextField();
        NamePanel = new javax.swing.JPanel();
        NameLabel = new javax.swing.JLabel();
        NameField = new javax.swing.JTextField();
        PinPanel = new javax.swing.JPanel();
        PinLabel = new javax.swing.JLabel();
        PinField = new javax.swing.JTextField();
        LevelPanel = new javax.swing.JPanel();
        LevelLabel = new javax.swing.JLabel();
        LevelField = new javax.swing.JFormattedTextField(formatter);
        DepartmentPanel = new javax.swing.JPanel();
        DepartmentLabel = new javax.swing.JLabel();
        DepartmentField = new javax.swing.JTextField();
        SubjectListPanel = new javax.swing.JPanel();
        SubjectListLabel = new javax.swing.JLabel();
        SubjectListFieldPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        SubjectListField = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        ConfirmButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        PasswordPanel = new javax.swing.JPanel();
        PasswordLabel = new javax.swing.JLabel();
        PasswordField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DisplayNameLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        javax.swing.GroupLayout DisplayNamePanelLayout = new javax.swing.GroupLayout(DisplayNamePanel);
        DisplayNamePanel.setLayout(DisplayNamePanelLayout);
        DisplayNamePanelLayout.setHorizontalGroup(
            DisplayNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DisplayNamePanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(DisplayNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(157, 157, 157)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        DisplayNamePanelLayout.setVerticalGroup(
            DisplayNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DisplayNamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DisplayNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator1)
        );

        EmailLabel.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        EmailLabel.setText("E-mail:");

        EmailField.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        javax.swing.GroupLayout EmailPanelLayout = new javax.swing.GroupLayout(EmailPanel);
        EmailPanel.setLayout(EmailPanelLayout);
        EmailPanelLayout.setHorizontalGroup(
            EmailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmailPanelLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(EmailLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(EmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        EmailPanelLayout.setVerticalGroup(
            EmailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EmailPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(EmailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EmailLabel)
                    .addComponent(EmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        ContactLabel.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        ContactLabel.setText("Contact #:");

        ContactField.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        javax.swing.GroupLayout ContactPanelLayout = new javax.swing.GroupLayout(ContactPanel);
        ContactPanel.setLayout(ContactPanelLayout);
        ContactPanelLayout.setHorizontalGroup(
            ContactPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContactPanelLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(ContactLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ContactField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        ContactPanelLayout.setVerticalGroup(
            ContactPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContactPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(ContactLabel)
                .addComponent(ContactField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        GenderLabel.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        GenderLabel.setText("Gender");

        GenderField.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        javax.swing.GroupLayout GenderPanelLayout = new javax.swing.GroupLayout(GenderPanel);
        GenderPanel.setLayout(GenderPanelLayout);
        GenderPanelLayout.setHorizontalGroup(
            GenderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GenderPanelLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(GenderLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(GenderField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        GenderPanelLayout.setVerticalGroup(
            GenderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GenderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(GenderLabel)
                .addComponent(GenderField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        NameLabel.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        NameLabel.setText("Name:");

        NameField.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        NameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NamePanelLayout = new javax.swing.GroupLayout(NamePanel);
        NamePanel.setLayout(NamePanelLayout);
        NamePanelLayout.setHorizontalGroup(
            NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NamePanelLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(NameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        NamePanelLayout.setVerticalGroup(
            NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(NameLabel)
                .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        PinLabel.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        PinLabel.setText("Security Pin:");

        PinField.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        javax.swing.GroupLayout PinPanelLayout = new javax.swing.GroupLayout(PinPanel);
        PinPanel.setLayout(PinPanelLayout);
        PinPanelLayout.setHorizontalGroup(
            PinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PinPanelLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(PinLabel)
                .addGap(40, 40, 40)
                .addComponent(PinField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PinPanelLayout.setVerticalGroup(
            PinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(PinLabel)
                .addComponent(PinField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        LevelLabel.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        LevelLabel.setText("Level: ");

        LevelField.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        javax.swing.GroupLayout LevelPanelLayout = new javax.swing.GroupLayout(LevelPanel);
        LevelPanel.setLayout(LevelPanelLayout);
        LevelPanelLayout.setHorizontalGroup(
            LevelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LevelPanelLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(LevelLabel)
                .addGap(73, 73, 73)
                .addComponent(LevelField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        LevelPanelLayout.setVerticalGroup(
            LevelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LevelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(LevelLabel)
                .addComponent(LevelField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        DepartmentLabel.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        DepartmentLabel.setText("Department:");

        DepartmentField.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        javax.swing.GroupLayout DepartmentPanelLayout = new javax.swing.GroupLayout(DepartmentPanel);
        DepartmentPanel.setLayout(DepartmentPanelLayout);
        DepartmentPanelLayout.setHorizontalGroup(
            DepartmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DepartmentPanelLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(DepartmentLabel)
                .addGap(37, 37, 37)
                .addComponent(DepartmentField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        DepartmentPanelLayout.setVerticalGroup(
            DepartmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DepartmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(DepartmentLabel)
                .addComponent(DepartmentField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        SubjectListLabel.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        SubjectListLabel.setText("Subject List: ");

        SubjectListField.setColumns(20);
        SubjectListField.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        SubjectListField.setRows(5);
        jScrollPane1.setViewportView(SubjectListField);

        javax.swing.GroupLayout SubjectListFieldPanelLayout = new javax.swing.GroupLayout(SubjectListFieldPanel);
        SubjectListFieldPanel.setLayout(SubjectListFieldPanelLayout);
        SubjectListFieldPanelLayout.setHorizontalGroup(
            SubjectListFieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
        );
        SubjectListFieldPanelLayout.setVerticalGroup(
            SubjectListFieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout SubjectListPanelLayout = new javax.swing.GroupLayout(SubjectListPanel);
        SubjectListPanel.setLayout(SubjectListPanelLayout);
        SubjectListPanelLayout.setHorizontalGroup(
            SubjectListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubjectListPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SubjectListLabel)
                .addGap(44, 44, 44)
                .addComponent(SubjectListFieldPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        SubjectListPanelLayout.setVerticalGroup(
            SubjectListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SubjectListFieldPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(SubjectListPanelLayout.createSequentialGroup()
                .addComponent(SubjectListLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        ConfirmButton.setText("Confirm Changes");
        ConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    ConfirmButtonActionPerformed(evt);
                } catch (SQLException ex) {
                    Logger.getLogger(AdminEditUserForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        CancelButton.setText("Cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(ConfirmButton)
                .addGap(31, 31, 31)
                .addComponent(CancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ConfirmButton)
                    .addComponent(CancelButton))
                .addContainerGap())
        );

        PasswordLabel.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        PasswordLabel.setText("Password:");

        PasswordField.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        javax.swing.GroupLayout PasswordPanelLayout = new javax.swing.GroupLayout(PasswordPanel);
        PasswordPanel.setLayout(PasswordPanelLayout);
        PasswordPanelLayout.setHorizontalGroup(
            PasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PasswordPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(PasswordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );
        PasswordPanelLayout.setVerticalGroup(
            PasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PasswordLabel)
            .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout MidPanelLayout = new javax.swing.GroupLayout(MidPanel);
        MidPanel.setLayout(MidPanelLayout);
        MidPanelLayout.setHorizontalGroup(
            MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(EmailPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ContactPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(NamePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(DepartmentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(SubjectListPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(GenderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PinPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(LevelPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PasswordPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        MidPanelLayout.setVerticalGroup(
            MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MidPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PasswordPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EmailPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ContactPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GenderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PinPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LevelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DepartmentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SubjectListPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DisplayNamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MidPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addComponent(DisplayNamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MidPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        updateLabels();
        pack();
    }// </editor-fold>                        

    private void ConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {                                              
        // TODO add your handling code here:
        boolean check = checkFields();
        if(check == true)
        {
        String[] sublist;
        String[] subjlist = new String[20];
        String[] classlist = new String[10];
        String temp;
        String[] subjects = new String[10];
        if(NameField.getText().equals("") || PasswordField.getText().equals("") || EmailField.getText().equals("") || ContactField.getText().equals("") || GenderField.getText().equals("") || PinField.getText().equals("") || LevelField.getText().equals("") || DepartmentField.getText().equals("") || SubjectListField.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Insufficient information to edit.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            String list = SubjectListField.getText();
            boolean condi = false;
            sublist = list.split("\\r?\\n");
            stat = con.createStatement(); 
            ResultSet cond = stat.executeQuery("SELECT * FROM users WHERE ID = " + mm.ID);
            while(cond.next())
            {
                if((cond.getInt("level") == 0 && LevelField.getText().equals("0")) || (LevelField.getText().equals("0")) )
                {
                    //System.out.println(cond.getInt("level"));
                    //System.out.println(LevelField.getText());
                    condi = (cond.getInt("level") == 0 && LevelField.getText().equals("0")) || (LevelField.getText().equals("0"));
                    for(int a = 0; a < 10;a++)
                    {
                        if(a < sublist.length)
                        {
                            subjects[a] = sublist[a];
                        }
                        else
                        {
                            subjects[a] = "NA";
                        }
                    }
                }
                else if ((cond.getInt("level") != 0 || !LevelField.getText().equals("0")) || (cond.getInt("level") == 0 && !LevelField.getText().equals("0")))
                {
                    System.out.println(cond.getInt("level"));
                    System.out.println(LevelField.getText());
                    for(int a = 0; a < 10; a++)
                    {
                        subjects[a] = "NA";
                    }
                }
            }
            int index;
            for(int a = 0; a < 10; a++)
            {
                index = a + 1;
                stat.executeUpdate("UPDATE users SET subject" + Integer.toString(index) + " = '" + subjects[a] + "' WHERE ID =" + mm.ID);
            }
            index = 1;
            stat.executeUpdate("UPDATE users SET Name = '" + NameField.getText() + "' WHERE ID =" + mm.ID);
            stat.executeUpdate("UPDATE users SET Password = '" + PasswordField.getText() + "' WHERE ID =" + mm.ID);
            stat.executeUpdate("UPDATE users SET email = '" + EmailField.getText() + "' WHERE ID =" + mm.ID);
            stat.executeUpdate("UPDATE users SET contact = '" + ContactField.getText() + "' WHERE ID =" + mm.ID);
            stat.executeUpdate("UPDATE users SET gender = '" + GenderField.getText() + "' WHERE ID =" + mm.ID);
            stat.executeUpdate("UPDATE users SET pin = '" + PinField.getText() + "' WHERE ID =" + mm.ID);
            stat.executeUpdate("UPDATE users SET level = " + LevelField.getText() + " WHERE ID =" + mm.ID);
            stat.executeUpdate("UPDATE users SET department = '" + DepartmentField.getText() + "' WHERE ID =" + mm.ID);
            JOptionPane.showMessageDialog(null, "Editing User Success", "Success", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        }
        }
    }                                           

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        this.dispose();
    }                                            

    private void NameFieldActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new AdminEditUserForm().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(AdminEditUserForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private void JDBC() throws SQLException
    {
        url="jdbc:mysql://localhost:3306/cpe_database";
        prop = new Properties();
        prop.setProperty("user", "root");
        prop.setProperty("password", "");
        d = new com.mysql.jdbc.Driver();
        con = d.connect(url, prop);
        if(con==null)   
        {
            System.out.println("Connection Failed");
            return;
        }
        else
        {
            System.out.println("Connected");
        }
    }
    
    private void updateLabels() throws SQLException
    {
        String s = mm.ID;
        DisplayNameLabel.setText(s);
    }
    
    private boolean checkFields() throws SQLException
    {
        String[] subject = SubjectListField.getText().split("\\r?\\n");
        String[] real = new String[subject.length];
        for(int b = 0; b < real.length; b++)
        {
            real[b] = subject[b].substring(0, 7);
        }
        boolean checker = false;
        stat = con.createStatement();
        for(int a = 0; a < subject.length; a++)
        {
            ResultSet result1 = stat.executeQuery("SELECT * FROM classes");
            while(result1.next())
            {
                if(real[a].equals(result1.getString("Name")))
                {
                    checker = true;
                    //System.out.println("pumasok");
                    break;
                }
            }
        }
        //System.out.println(subject.length);
        //System.out.println(real.length);
        //System.out.println(real[0]);
        //System.out.println(checker);
        if(checker == false)
        {
            JOptionPane.showMessageDialog(null, "Subject input not existing on classes", "Error Input", JOptionPane.ERROR_MESSAGE);
        }
        return checker;
    }
    // Variables declaration - do not modify                     
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton ConfirmButton;
    private javax.swing.JTextField ContactField;
    private javax.swing.JLabel ContactLabel;
    private javax.swing.JPanel ContactPanel;
    private javax.swing.JTextField DepartmentField;
    private javax.swing.JLabel DepartmentLabel;
    private javax.swing.JPanel DepartmentPanel;
    private javax.swing.JLabel DisplayNameLabel;
    private javax.swing.JPanel DisplayNamePanel;
    private javax.swing.JTextField EmailField;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JPanel EmailPanel;
    private javax.swing.JTextField GenderField;
    private javax.swing.JLabel GenderLabel;
    private javax.swing.JPanel GenderPanel;
    private javax.swing.JFormattedTextField LevelField;
    private javax.swing.JLabel LevelLabel;
    private javax.swing.JPanel LevelPanel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JPanel MidPanel;
    private javax.swing.JTextField NameField;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JPanel NamePanel;
    private javax.swing.JTextField PasswordField;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JPanel PasswordPanel;
    private javax.swing.JTextField PinField;
    private javax.swing.JLabel PinLabel;
    private javax.swing.JPanel PinPanel;
    private javax.swing.JTextArea SubjectListField;
    private javax.swing.JPanel SubjectListFieldPanel;
    private javax.swing.JLabel SubjectListLabel;
    private javax.swing.JPanel SubjectListPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration    
    
    //Variable declaration for mysql properties
    private String url;
    private Properties prop;
    private Driver d;
    private Connection con;
    private Statement stat;
    private ResultSet result;
    //End of variable declaration
}
